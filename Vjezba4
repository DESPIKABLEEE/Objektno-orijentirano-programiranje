//1. Napisati funkciju koja broji koliko pojavljivanja danog podstringa ima u stringu
//koristeći funkcije standardne biblioteke.
#include <string>
#include <iostream>
//using namespace std;

int funkcija(std::string recenica, std::string trazena_rijec) {
	int brojac = 0;
	std::string::size_type pozicija = 0;
	while ((pozicija = recenica.find(trazena_rijec, pozicija)) != std::string::npos) {
		brojac++;
		pozicija += trazena_rijec.length();
	}
	return brojac;

}

int main() {
	std::string s = "duje je kralj, duje je car";
	std::string substring = "duje";
	std::cout << "Imamo " << funkcija(s, substring) << " ponavljanja rijeci " << substring << "\n";
	//std::cout << "Hello World";

	return 0;
}





//2. Učitati string koji predstavlja rečenicu. Napisati funkciju koja iz stringa
//izbacuje sve praznine koje se nalaze ispred znakova interpunkcije i dodaje
//praznine nakon znaka interpunkcije ako nedostaju.
//Primjer: Za rečenicu ”Ja bih ,ako ikako mogu , ovu recenicu napisala ispravno
//.”, ispravna rečenica glasi: ”Ja bih, ako ikako mogu, ovu recenicu napisala
//ispravno.”.
#include <string>
#include <iostream>
#include <cctype>
using namespace std;

void funkcija(string& s) {
    string rezultat;
    int to_je_to = 0;
    int i;
    char znak;
    for(i = 0 ; i < s.length() ; i++){
        znak = s[i];
        if(ispunct(znak)){
            if((!rezultat.empty()) && (rezultat.back() == ' ')){
                rezultat.pop_back();
            }
            rezultat += znak;
            to_je_to = 1;
        } else {
            if(to_je_to && (znak != ' ')){
                rezultat += ' ';
            }
            rezultat += znak;
            to_je_to = 0;
        }
    }
    s = rezultat;
}

int main() {
	string s = "Ja bih ,ako ikako mogu , ovu recenicu napisala ispravno."; // Ja bih, ako ikako mogu, ovu recenicu napisala ispravno.
	cout << s << "\n";
	funkcija(s);
	cout << s << "\n";
    
	return 0;
}
